apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "configpropagation.fullname" . }}
  labels:
    {{- include "configpropagation.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "configpropagation.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "configpropagation.selectorLabels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      serviceAccountName: {{ include "configpropagation.serviceAccountName" . }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: manager
          image: "{{ .Values.image.repository }}:{{ default .Chart.AppVersion .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- with .Values.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- if and .Values.metrics.enabled .Values.metrics.port }}
          ports:
            - name: http
              containerPort: {{ .Values.metrics.port }}
              protocol: TCP
          {{- end }}
          {{- if .Values.livenessProbe.enabled }}
          livenessProbe:
            {{- toYaml (omit .Values.livenessProbe "enabled") | nindent 12 }}
          {{- end }}
          {{- if .Values.readinessProbe.enabled }}
          readinessProbe:
            {{- toYaml (omit .Values.readinessProbe "enabled") | nindent 12 }}
          {{- end }}
          env:
            - name: ENABLE_WEBHOOKS
              value: "{{ ternary "true" "false" .Values.webhook.enabled }}"
            {{- if not (eq (printf "%v" .Values.env.batchSize) "") }}
            - name: BATCH_SIZE
              value: "{{ .Values.env.batchSize }}"
            {{- end }}
            {{- if not (eq (printf "%v" .Values.env.workers) "") }}
            - name: WORKERS
              value: "{{ .Values.env.workers }}"
            {{- end }}
            {{- if not (eq (printf "%v" .Values.env.resyncSeconds) "") }}
            - name: RESYNC_SECONDS
              value: "{{ .Values.env.resyncSeconds }}"
            {{- end }}
            {{- with .Values.env.extra }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          args:
            - --metrics-bind-address={{ .Values.metrics.bindAddress }}
            - --health-probe-bind-address={{ .Values.healthProbe.bindAddress }}
            - --webhook-port={{ .Values.webhook.port }}
            {{- if .Values.leaderElection.enabled }}
            - --leader-elect
            {{- end }}
            {{- with .Values.args }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          {{- with .Values.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.topologySpreadConstraints }}
      topologySpreadConstraints:
        {{- toYaml . | nindent 8 }}
      {{- end }}
